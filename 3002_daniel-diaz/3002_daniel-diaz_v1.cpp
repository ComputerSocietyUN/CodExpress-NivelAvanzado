// Made by Daniel Diaz (@Danidiaztech)
#include <bits/stdc++.h>
using namespace std;


void solve(){
  // TOTAL COMPLEXITY: O(Q * log(N))
  int N, Q;
  cin >> N;
  long long a[N];
  for (int i =0 ;i < N; i++){
    cin >> a[i];
  }

  cin >> Q;

  while (Q--){
    long long value;
    cin >> value;

    // lower bound implementation 
    // min i such that:
    // ai >= value

    long long l = -1, r = N;

    while (l + 1ll < r){
      long long m = l + (r - l) / 2;

      if (a[m] > value){
        r = m;
      }
      else{
        l = m;
      }
    }

    // l has lower_bound, r is first element greater than value
    cout << l <<  endl;
  }

}

int main() {
  cin.tie(0); cout.tie(0); ios_base::sync_with_stdio(0);

  #if LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
  #endif

  int tc = 1;
  // cin >> tc;

  for (int t = 1; t <= tc; t++){
    solve();
  }
}



/**
TESTCASE 1 
IN:
10
-19 -7 -4 0 2 7 7 7 13 15
5
-7 7 7 2 15
OUT:
1
7
7
4
9

TESTCASE 2:
IN:
30
7 16 17 18 18 18 24 35 36 39 41 41 42 44 50 50 57 63 68 75 76 78 82 84 84 88 88 90 94 95
5
33 49 80 84 90

OUT:
6
13
21
24
27


TESTCASE 3:
IN:
100
0 1 2 6 8 11 11 12 12 13 14 15 15 16 17 18 18 20 22 24 28 29 29 30 30 30 30 30 31 31 31 33 34 34 35 35 36 36 37 37 37 37 40 40 40 41 42 43 45 45 47 48 51 51 52 53 53 53 55 55 58 58 58 59 59 61 61 63 63 64 64 65 65 66 68 69 71 72 73 75 79 80 82 82 82 83 83 85 85 86 88 88 88 93 95 95 97 98 99 99
200
1 1 1 1 2 4 5 6 6 6 6 7 7 7 9 9 10 10 10 10 11 11 11 11 11 12 12 12 12 12 13 14 14 14 15 15 15 15 16 16 17 17 17 17 18 18 19 20 22 23 23 24 25 25 25 26 26 27 27 28 30 30 31 31 32 34 35 35 36 37 38 38 38 40 41 42 42 43 43 43 44 45 45 45 46 46 46 47 47 47 47 48 48 49 50 50 52 52 53 53 54 55 55 55 56 56 56 56 57 57 57 57 58 58 58 59 59 59 59 59 60 60 61 62 62 62 62 63 63 64 65 65 66 66 66 66 67 69 69 69 70 70 70 70 71 71 72 72 73 75 75 75 75 76 79 80 80 80 81 81 82 82 83 83 84 85 86 86 86 87 87 89 90 90 90 90 90 90 91 91 92 92 92 92 92 94 94 95 96 96 96 96 97 97 98 98 99 99 99 100

OUT:
1
1
1
1
2
2
2
3
3
3
3
3
3
3
4
4
4
4
4
4
6
6
6
6
6
8
8
8
8
8
9
10
10
10
12
12
12
12
13
13
14
14
14
14
16
16
16
17
18
18
18
19
19
19
19
19
19
19
19
20
27
27
30
30
30
33
35
35
37
41
41
41
41
44
45
46
46
47
47
47
47
49
49
49
49
49
49
50
50
50
50
51
51
51
51
51
54
54
57
57
57
59
59
59
59
59
59
59
59
59
59
59
62
62
62
64
64
64
64
64
64
64
66
66
66
66
66
68
68
70
72
72
73
73
73
73
73
75
75
75
75
75
75
75
76
76
77
77
78
79
79
79
79
79
80
81
81
81
81
81
84
84
86
86
86
88
89
89
89
89
89
92
92
92
92
92
92
92
92
92
92
92
92
92
92
93
93
95
95
95
95
95
96
96
97
97
99
99
99
99

 */
